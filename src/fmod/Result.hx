package fmod;

enum abstract Result(Int)
{
    var Ok;
    var ErrBadCommand;
    var ErrChannelAlloc;
    var ErrChannelStolen;
    var ErrDMA;
    var ErrDSPConnection;
    var ErrDSPDontProcess;
    var ErrDSPFormat;
    var ErrDSPInUse;
    var ErrDSPNotFound;
    var ErrDSPReserved;
    var ErrDSPSilence;
    var ErrDSPType;
    var ErrFileBad;
    var ErrFileCoudNotSeek;
    var ErrFileDiskEjected;
    var ErrFileEOF;
    var ErrFileEndOfData;
    var ErrFileNotFound;
    var ErrFormat;
    var ErrHeaderMismatch;
    var ErrHTTP;
    var ErrHTTPAccess;
    var ErrHTTPProxyAuth;
    var ErrHTTPServerError;
    var ErrHTTPTimeout;
    var ErrInitialization;
    var ErrInitialized;
    var ErrInternal;
    var ErrInvalidFloat;
    var ErrInvalidHandle;
    var ErrInvalidParam;
    var ErrInvalidPosition;
    var ErrInvalidSpeaker;
    var ErrInvalidSyncpoint;
    var ErrInvalidThread;
    var ErrInvalidVector;
    var ErrMAXAudible;
    var ErrMemory;
    var ErrMemoryCantPoint;
    var ErrNeeds3D;
    var ErrNeedsHardware;
    var ErrNetConnect;
    var ErrNetSocketError;
    var ErrNetURL;
    var ErrNetWouldBlock;
    var ErrNotReady;
    var ErrOutputAllocated;
    var ErrOutputCreateBuffer;
    var ErrOutputDriverCall;
    var ErrOutputFormat;
    var ErrOutputInit;
    var ErrOutputNoDrivers;
    var ErrPlugin;
    var ErrPluginMissing;
    var ErrPluginResource;
    var ErrPluginVersion;
    var ErrRecord;
    var ErrReverbChannelGroup;
    var ErrReverbInstance;
    var ErrSubsounds;
    var ErrSubsoundAllocated;
    var ErrSubsoundCantmove;
    var ErrTagNotFound;
    var ErrTooManyChanels;
    var ErrTruncated;
    var ErrUnimplemented;
    var ErrUninitialized;
    var ErrUnsupported;
    var ErrVersion;
    var ErrEventAlreadyLoaded;
    var ErrEventLiveUpdateBusy;
    var ErrEventLiveUpdateMismatch;
    var ErrEventLiveUpdateTIMEOUT;
    var ErrEventNotFound;
    var ErrStudioUninitialized;
    var ErrStudioNotLoaded;
    var ErrInvalidString;
    var ErrAlreadyLocked;
    var ErrNotLocked;
    var ErrRecordDisconnected;
    var ErrTooManySamples;
}